/**
 * Copyright (c) 2022, Oracle and/or its affiliates.
 * Licensed under the Universal Permissive License v 1.0 as shown at https://oss.oracle.com/licenses/upl/
 */
/* eslint-disable no-param-reassign */
/* eslint-disable import/no-extraneous-dependencies */

const webpack = require('webpack');

// config() will read the .env file, parse the contents, assign it to process.env
require('dotenv').config();

let BASE_URL = '';
if (process.env.BASE_URL) {
  BASE_URL = process.env.BASE_URL.toString().trim();
  if (BASE_URL.substr(-1) === '/') {
    BASE_URL = BASE_URL.substr(0, BASE_URL.length - 1);
  }
}

module.exports = {
  /**
   * @param {object} options.context - ojet build context which contains useful fields like
   * buildType
   * @param {object} options.config - Default webpack config generated by ojet. You can
   * add to it, remove from it or update it using webpack-merge which was
   * installed alongside webpack. If desired, you can create your own config
   * and return it which will override the default config
   * @returns {object|undefined}
   */
  webpack: ({ context, config }) => {
    if (context.buildType === 'release') {
      // update config with release / production options
    } else {
      // update config with development options
    }
    // Configure how modules are resolved
    config.resolve.fallback = {
      http: false,
      https: false,
      'https-proxy-agent': false,
      // assert, net, tls needed for 'https-proxy-agent' dependency
      assert: false,
      net: false,
      tls: false,
      'colorthief/color-thief.umd': false,
    };
    config.devServer = {
      historyApiFallback: true,
    };
    config.output.publicPath = (BASE_URL) ? `${BASE_URL}` : '';
    config.plugins.push(
      // define variables to be used in the application, this is used for the routers basename
      new webpack.DefinePlugin({
        'process.env.BASE_URL': JSON.stringify(BASE_URL),
      }),
    );
    return config;
  },
};
